name: Unity PlayMode Tests
on:
  push:
    branches:
      - 'master'
      - 'develop'
  pull_request:
    branches:
      - 'develop'
      - 'master'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ ( github.event_name == 'pull_request' || github.event.action == 'synchronize' ) }}

jobs:
  test:
    name: Run PlayMode Tests
    runs-on: ubuntu-latest
    env:
      UNITY_PROJECT_PATH: ''
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
          submodules: 'recursive'
      
      - name: Find Project Version
        id: get-unity-version
        run: |
          PROJECT_PATH=$(find . -name ProjectSettings -type d -printf '%h\n' | head -1)
          echo "UNITY_PROJECT_PATH=${PROJECT_PATH}" >> $GITHUB_ENV
          VERSION=$(grep -m 1 "m_EditorVersion:" ${PROJECT_PATH}/ProjectSettings/ProjectVersion.txt | cut -d' ' -f2)
          echo "UNITY_VERSION=${VERSION}" >> $GITHUB_ENV
          echo "Found Unity version: ${VERSION}"
      
      - name: Setup Unity
        uses: game-ci/unity-setup@v2
        with:
          unity-version: ${{ env.UNITY_VERSION }}
      
      - name: Activate Unity License
        uses: buildalon/activate-unity-license@v1
        with:
          license: 'Personal'
          username: '${{ secrets.UNITY_EMAIL }}'
          password: '${{ secrets.UNITY_PASSWORD }}'
      
      - name: Run PlayMode Tests
        uses: game-ci/unity-test-runner@v2
        with:
          testMode: playmode
          artifactsPath: test-results
          coverageOptions: none
      
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: PlayMode Test Results
          path: test-results
          retention-days: 1
      
      - name: Cleanup Logs
        if: always()
        run: |
          find "${{ env.UNITY_PROJECT_PATH }}" -name "*.log" -type f -delete
